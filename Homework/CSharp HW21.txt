Shae Morlis
C# HW21

1. What is the difference in the purposes of SQL and LINQ? In other words, why do we need two different
query languages? Does LINQ replace SQL? Does SQL make LINQ unnecesary?
The main difference between LINQ and SQL is that LINQ is a Microsoft . NET framework component, which adds native data querying capabilities to . NET languages, while SQL is a standard language to store and manage data in RDBMS. ... In short, LINQ is a structured query syntax built-in .

2. What is the one essential requirement for the datastructures used with LNQ? Why is this requirement
important? LINQ requires the data to be stored in a data structure that implements the IEnumerable or IEnumerable<T> interface. It does not matter what structure you use (an array, a HashSet<T>, a Queue<T>, or any of the other collection types, or even one that you define yourself) as long as it is enumerable.

3. Were does the LINQ Select() method live?  It is an extension method of the Enumerable class. The Enumerable class is located in the System.Linq namespace and provides a substantial set of static methods for querying objects that implement the generic IEnumerable<T> interface.

4. (Select) Explain, token by token, each token in this line of code:
IEnumerable<string> customerFirstNames = customers.Select(cust => cust.FirstName);
Enumerable collection of customer names assigned to customer first name of SQL table

5. (Filter) Explain, token by token, each token in this line of code:
IEnumerable<string> usCompanies = addresses.Where(addr =>
String.Equals(addr.Country, "United States")).Select(usComp => usComp.CompanyName);
Enumerable collection of companies assigned to SQL query addresses of companies, company names

6. (OrderBy) Explain, token by token, each token in this line of code:
IEnumerable<string> companyNames = addresses.OrderBy(addr =>
addr.CompanyName).Select(comp => comp.CompanyName);
7. (Group) Explain, token by token, each token in this line of code:
var companiesGroupedByCountry = addresses.GroupBy(addrs => addrs.Country);
8. (Distinct) Explain, token by token, each token in this line of code:
int numberOfCountries = addresses.Select(addr => addr.Country).Distinct().Count();
9. (Join) Explain, token by token, each token in this line of code:

10. Explain the difference between a deferred collection and a static, cached collection.